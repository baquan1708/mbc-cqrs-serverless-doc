{
  "description": "Learn how to create modules.",
  "title": "Modules",
  "intro_text": "A module is a class annotated with a `@Module()` decorator. The `@Module()` decorator provides metadata that organize the application structure.",
  "module_definition_text": "Defining a module in the MBC Serverless Framework is the same as in Nest.js, so please refer to this section using [the provided link](https://docs.nestjs.com/modules).",
  "module_example_intro": "In the example below, the `CatModule` defines the `CatController`, provides and exports the `CatService`, and imports `CommandModule`. The `CommandModule` is a dynamic module that allows registering `tableName` and `dataSyncHandlers`, with options to enable or disable `skipError` and `disableDefaultHandler`.",
  "command_module_details": "For more details about the `CommandModule`, please refer to the [API reference](./command-module.md) section."
}