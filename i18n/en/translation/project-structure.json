{
  "description": "Project structure",
  "title": "Project structure",
  "structure_title": "MBC CQRS serverless Project Structure",
  "structure_description": "This page provides an overview of the project structure of a mbc-cqrs-serverless application. It covers top-level files and folders, configuration files.",
  "top_level_folders_title": "Top-level folders",
  "top_level_folders_description": "Top-level folders are used to organize your application's code, infrastructure for local development, data migration, and testing.",
  "infra_local_description": "Infrastructure runs in a local environment",
  "prisma_description": "Configuration for your Prisma ORM and dynamoDB table",
  "src_description": "Application source folder",
  "test_description": "Configuration for e2e Jest testing and manual API tests",
  "top_level_files_title": "Top-level files",
  "top_level_files_description": "Top-level files are used to configure your application, manage dependencies, and define environment variables.",
  "env_description": "Environment variables",
  "env_local_description": "Local environment variables",
  "eslintrc_description": "Configuration file for ESLint",
  "gitignore_description": "Specifies files and directories that Git should ignore",
  "prettierrc_description": "Configure Prettier's code formatting rules",
  "jest_config_description": "Configuration for Jest testing",
  "nest_cli_description": "Nest.js plugins configuration",
  "package_lock_description": "Lockfile that holds information on the dependencies installed",
  "package_description": "Project dependencies and scripts",
  "readme_description": "Information about a project, including its description, installation instruction, and usage guidelines",
  "tsconfig_build_description": "Configuration TypeScript compiler options",
  "tsconfig_description": "Configuration file for TypeScript",
  "module_conventions_title": "Application module conventions",
  "module_conventions_description": "The following file conventions are used to define new module in src folder.",
  "dto_folder_description": "Define the DTO (Data Transfer Object) schema. A DTO is an object that defines how the data will be sent over the network.",
  "entities_folder_description": "Define the business object.",
  "handler_folder_description": "Define the data sync handler classes.",
  "service_file_description": "Define business logics.",
  "controller_file_description": "Define a controller.",
  "module_file_description": "Organizes code relevant for a specific feature, keeping code organized and establishing clear boundaries."
}