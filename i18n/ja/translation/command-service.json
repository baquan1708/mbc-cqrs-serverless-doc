{
  "Learn how to use CommandService.": "CommandService の使用方法を学びましょう。",
  "CommandService": "",
  "Description": "説明",
  "The methods of this service are primarily used to manipulate the command table.": "このサービスのメソッドは主にコマンド テーブルを操作するために使用されます。",
  "In the example for the method below, assume you import the `CommandModule` into your module as follows:": "以下のメソッドの例では、次のように `CommandModule` をモジュールにインポートすると仮定します。",
  "Then, the `CommandService` and `DataService` will be ready for injection into other services for your use.": "これで、`CommandService` と `DataService` を他のサービスに挿入して使用できるようになります。",
  "Methods": "メソッド",
  "*async* `publish(input: CommandInputModel, opts: ICommandOptions)`": "",
  "Utilize this method to publish a full command, as it will insert the data directly into the **command** table.": "このメソッドを使用すると、**コマンド** テーブルにデータが直接挿入されるため、完全なコマンドを公開できます。",
  "For example, you can publish a new cat command as bellow:": "たとえば、次のように新しい cat コマンドを発行できます。",
  "The method returns the command data.": "このメソッドはコマンド データを返します。",
  "*async* `publishPartialUpdate( input: CommandPartialInputModel, opts?: ICommandOptions)`": "",
  "This method allows you to create new command data based on the previous command.": "このメソッドは、以前のコマンドに基づいて新しいコマンド データを発行します。",
  "For example, you want to update cat's name:": "たとえば、猫の名前を更新するとします。",
  "async reSyncData()": "",
  "If you want to reapply the data sync handler, this method is designed for you to use. You only need to call the function as follows:": "データ同期ハンドラーを再適用する場合は、このメソッドを使用できるように設計されています。次のように関数を呼び出すだけです。"
}