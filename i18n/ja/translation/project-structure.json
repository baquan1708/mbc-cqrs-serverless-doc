{
  "Project structure": "プロジェクト構造 ",
  "MBC CQRS serverless Project Structure": "MBC CQRS serverless プロジェクトの構造",
  "This page provides an overview of the project structure of a mbc-cqrs-serverless application. It covers top-level files and folders, configuration files.": "このページでは mbc-cqrs-serverless アプリケーションのプロジェクトの構造を説明します。プロジェクトルートディレクトリのファイルとディレクトリ、構成ファイルについて説明します。",
  "Top-level folders": "プロジェクトルートのディレクトリ",
  "Top-level folders are used to organize your application's code, infrastructure for local development, data migration, and testing.": "最上位のディレクトリはローカル開発、データマイグレーション、テスト用のディレクトリから構成されています。",
  "Infrastructure runs in a local environment": "ローカル開発のためのインフラ実行基盤",
  "Configuration for your Prisma ORM and dynamoDB table": "Prisma ORM、DynamoDBテーブルの設定",
  "Application source folder": "アプリケーションソースフォルダ",
  "Configuration for e2e Jest testing and manual API tests": "E2Eテスト、APIテスト等の設定",
  "Top-level files": "プロジェクトルートディレクトリ内のファイル",
  "Top-level files are used to configure your application, manage dependencies, and define environment variables.": "プロジェクトルートディレクトリ内のファイルはアプリケーション設定、依存関係の管理、環境設定ファイルの定義等を行っています。",
  "Environment variables": "環境設定ファイル",
  "Local environment variables": "ローカル開発用環境設定ファイル",
  "Configuration file for ESLint": "ESLint 設定ファイル",
  "Specifies files and directories that Git should ignore": ".gitignore ファイル",
  "Configure Prettier's code formatting rules": "Prettier のコード整形ルール設定ファイル",
  "Configuration for Jest testing": "Jest 用テスト設定ファイル",
  "Nest.js plugins configuration": "Node.js プラグイン設定ファイル",
  "Lockfile that holds information on the dependencies installed": "package.json のロックファイル",
  "Project dependencies and scripts": "プロジェクトの依存モジュール及び、スクリプトファイル",
  "Information about a project, including its description, installation instruction, and usage guidelines": "プロジェクトの説明、インストール方法、ガイドライン等を記載したファイル",
  "Configuration TypeScript compiler options": "TypeScript コンパイラーオプション設定ファイル",
  "Configuration file for TypeScript": "TypeScript 設定ファイル",
  "Application module conventions": "アプリケーションモジュールの規約",
  "The following file conventions are used to define new module in src folder.": "次の記述は、src ディレクトリ内に新しいモジュールを定義する際の規約です。",
  "Define the DTO (Data Transfer Object) schema. A DTO is an object that defines how the data will be sent over the network.": "DTO (データ転送オブジェクト) スキーマを定義します。 DTO は、ネットワーク上でデータを送信する方法を定義するオブジェクトです。",
  "Define the business object.": "ビジネスオブジェクトを定義します。",
  "Define the data sync handler classes.": "データ同期ハンドラークラスを定義します。",
  "Define business logics.": "ビジネスロジックを定義します。",
  "Define a controller.": "コントローラを定義します。",
  "Organizes code relevant for a specific feature, keeping code organized and establishing clear boundaries.": "特定の機能に関するコード記述します。整理した状態を保ち明確な境界を確立します。"
}